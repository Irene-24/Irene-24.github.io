{"version":3,"sources":["../../api/services/order2.services.js"],"names":["dateTimeRegExp","reviver","value","test","Date","toLocaleString","weekday","year","month","day","hour","minute","second","OrderService2","getAllOrders","validOrders","data","map","order","newOrder","Order2","id","date","price","description","addOrder","ordersLength","length","lastID","push","modifyOrder","orderID","updates","orders","indexOfOrderToModify","findIndex","Number","oldOrder","forEach","update","Object","keys","key","getOrder","indexOfOrderToFind"],"mappings":"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","sourcesContent":["import data from '../utils/orders2';\r\nimport Order2 from '../models/order2.model';\r\n\r\n\r\n// Original source = https://dzone.com/articles/working-with-dates-in-javascript-json-and-oracle-d\r\n\r\nconst dateTimeRegExp = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$/;\r\nconst reviver = (value) => {\r\n  if (dateTimeRegExp.test(value)) {\r\n    return new Date(value).toLocaleString('en-GB', {\r\n      weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric',\r\n    });\r\n  }\r\n  return value;\r\n};\r\n\r\nconst OrderService2 = {\r\n  getAllOrders() {\r\n    const validOrders = data.map((order) => {\r\n      const newOrder = new Order2();\r\n      newOrder.id = order.id;\r\n      newOrder.date = reviver(order.date);\r\n      newOrder.price = order.price;\r\n      newOrder.description = [...order.description];\r\n      return newOrder;\r\n    });\r\n    return validOrders;\r\n  },\r\n  addOrder(order) {\r\n    // format\r\n    // {\r\n    //     \"id\": 1,\r\n    //     \"price\": 3000,\r\n    //     \"date\": \"2019-02-22T13:33:43.708Z\",\r\n    //     \"description\": [\r\n    //         {\r\n    //             \"mealName\": \"white rice\",\r\n    //             \"mealPrice\": 200,\r\n    //             \"plates\": 3,\r\n    //             \"toppings\": [\r\n    //                 {\r\n    //                     \"toppingName\": \"beef\",\r\n    //                     \"toppingPrice\": 100,\r\n    //                     \"quantity\": 4\r\n    //                 },\r\n    //                 {\r\n    //                     \"toppingName\": \"pomo\",\r\n    //                     \"toppingPrice\": 100,\r\n    //                     \"quantity\": 4\r\n    //                 }\r\n    //             ]\r\n    //         }\r\n    //     ]\r\n    // }\r\n    const newOrder = order;\r\n    const ordersLength = data.length;\r\n    const lastID = data[ordersLength - 1].id;\r\n    newOrder.id = lastID + 1;\r\n    data.push(newOrder);\r\n    return newOrder;\r\n  },\r\n\r\n  modifyOrder(orderID, updates) {\r\n  // format\r\n  /* [\r\n    {\r\n      \"price\": 1800,\r\n      \"description\": [\r\n                  {\r\n                      \"mealName\": \"white rice\",\r\n                      \"mealPrice\": 200,\r\n                      \"plates\": 3,\r\n                      \"toppings\": [\r\n                          {\r\n                              \"toppingName\": \"beef\",\r\n                              \"toppingPrice\": 100,\r\n                              \"quantity\": 2\r\n                          },\r\n                          {\r\n                              \"toppingName\": \"pomo\",\r\n                              \"toppingPrice\": 100,\r\n                              \"quantity\": 2\r\n                          }\r\n                      ]\r\n                  }\r\n              ]\r\n    }\r\n  ]\r\n   */\r\n    const id = orderID;\r\n    const orders = [...data];\r\n    const indexOfOrderToModify = orders.findIndex(order => Number(order.id) === Number(id));\r\n    const newOrder = orders[indexOfOrderToModify];\r\n    // console.log(indexOfOrderToModify);\r\n    // console.log(id);\r\n    // console.log(orders);\r\n    const oldOrder = { ...newOrder };\r\n    updates.forEach((update) => {\r\n      Object.keys(update).forEach((key) => {\r\n        newOrder[key] = update[key];\r\n      });\r\n    });\r\n    return { oldOrder, newOrder };\r\n  },\r\n  getOrder(orderID) {\r\n    const id = orderID;\r\n    const orders = [...data];\r\n    const indexOfOrderToFind = orders.findIndex(order => Number(order.id) === Number(id));\r\n    const order = orders[indexOfOrderToFind];\r\n    if (order) {\r\n      const newOrder = new Order2();\r\n      newOrder.id = order.id;\r\n      newOrder.date = reviver(order.date);\r\n      newOrder.price = order.price;\r\n      newOrder.description = [...order.description];\r\n      return newOrder;\r\n    }\r\n    return 'This order does not exist';\r\n  },\r\n};\r\nexport default OrderService2;\r\n"],"file":"order2.services.js"}