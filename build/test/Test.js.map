{"version":3,"sources":["../../api/test/Test.js"],"names":["process","env","NODE_ENV","should","chai","use","chaiHttp","describe","it","done","request","app","get","end","err","res","body","count","Number","meals","have","status","be","a","meal","id","name","price","category","options","post","send","Meal","property","eql","delete","updates","patch","resp","modMeal","orders","Orders","theOrder","date","description","mealName","mealPrice","plates","toppings","toppingName","toppingPrice","quantity","createdOrder","desc","modifiedOrder"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app';\r\n\r\nprocess.env.NODE_ENV = 'test';\r\nconst should = chai.should();\r\n\r\nchai.use(chaiHttp);\r\n\r\ndescribe('Testing meal routes', () => {\r\n  it('it should GET all the meals', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/meals')\r\n      .end((err, res) => {\r\n        const body = { ...res.body };\r\n        const count = Number(body.count);\r\n        const meals = [...body.meals];\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        count.should.be.a('number');\r\n        meals.should.be.a('array');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should post a meal', (done) => {\r\n    const meal = {\r\n      id: 12,\r\n      name: 'porridge beans',\r\n      price: 150,\r\n      category: 'lunch',\r\n      options: [\r\n        {\r\n          id: 1,\r\n          name: 'chicken',\r\n          price: 150,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'egg',\r\n          price: 60,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'beef',\r\n          price: 100,\r\n        },\r\n        {\r\n          id: 4,\r\n          name: 'fish',\r\n          price: 200,\r\n        },\r\n      ],\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/meals')\r\n      .send(meal)\r\n      .end((err, res) => {\r\n        res.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should GET a meal by a given id', (done) => {\r\n    const id = 2;\r\n    chai.request(app)\r\n      .get(`/api/v1/meals/${id}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.Meal.should.have.property('id');\r\n        res.body.Meal.should.have.property('id').eql(id);\r\n        res.body.Meal.should.have.property('name');\r\n        res.body.Meal.should.have.property('price');\r\n        res.body.Meal.should.have.property('category');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should DELETE a meal by a given id', (done) => {\r\n    const id = 2;\r\n    chai.request(app)\r\n      .delete(`/api/v1/meals/${id}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        res.body.should.have.property('message');\r\n        res.body.should.have.property('message').eql('Meal deleted');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should PATCH (modify) a meal by a given id', (done) => {\r\n    const id = 2;\r\n    const updates = [\r\n      {\r\n        name: 'fried rice',\r\n        category: 'all',\r\n        price: 250,\r\n      },\r\n    ];\r\n    chai.request(app)\r\n      .patch(`/api/v1/meals/${id}`)\r\n      .send(updates)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        const resp = { ...res.body.modMeal };\r\n        resp.should.have.property('id');\r\n        resp.should.have.property('name');\r\n        resp.should.have.property('id').eql(id);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Testing order routes', () => {\r\n  it('it should GET all the orders', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/orders2')\r\n      .end((err, res) => {\r\n        const body = { ...res.body };\r\n        const count = Number(body.count);\r\n        const orders = [...body.Orders];\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        count.should.be.a('number');\r\n        orders.should.be.a('array');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should POST an order', (done) => {\r\n    const theOrder = {\r\n      price: 3000,\r\n      date: '2019-02-01T12:33:43.350Z',\r\n      description: [\r\n        {\r\n          mealName: 'porridge yam',\r\n          mealPrice: 200,\r\n          plates: 3,\r\n          toppings: [\r\n            {\r\n              toppingName: 'beef',\r\n              toppingPrice: 100,\r\n              quantity: 4,\r\n            },\r\n            {\r\n              toppingName: 'pomo',\r\n              toppingPrice: 100,\r\n              quantity: 4,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    chai.request(app)\r\n      .post('/api/v1/orders2')\r\n      .send(theOrder)\r\n      .end((err, res) => {\r\n        const body = { ...res.body.createdOrder };\r\n        const price = Number(body.price);\r\n        const desc = body.description;\r\n        res.should.have.status(201);\r\n        res.body.should.be.a('object');\r\n        price.should.be.a('number');\r\n        desc.should.be.a('array');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should GET an order by a given id', (done) => {\r\n    const id = 2;\r\n    chai.request(app)\r\n      .get(`/api/v1/orders2/${id}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        const body = { ...res.body.theOrder };\r\n        body.should.have.property('id');\r\n        body.should.have.property('id').eql(id);\r\n        body.should.have.property('price');\r\n        body.should.have.property('date'); body.should.have.property('description');\r\n        body.description.should.be.a('array');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('it should PATCH (modify) an order by a given id', (done) => {\r\n    const id = 2;\r\n    const updates = [\r\n      {\r\n        price: 1800,\r\n        description: [\r\n          {\r\n            mealName: 'white rice',\r\n            mealPrice: 200,\r\n            plates: 3,\r\n            toppings: [\r\n              {\r\n                toppingName: 'beef',\r\n                toppingPrice: 100,\r\n                quantity: 2,\r\n              },\r\n              {\r\n                toppingName: 'pomo',\r\n                toppingPrice: 100,\r\n                quantity: 2,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    chai.request(app)\r\n      .patch(`/api/v1/orders2/${id}`)\r\n      .send(updates)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        const resp = { ...res.body.modifiedOrder };\r\n        resp.should.have.property('oldOrder');\r\n        resp.should.have.property('newOrder');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('Testing menu routes', () => {\r\n  it('it should GET all the menu', (done) => {\r\n    chai.request(app)\r\n      .get('/api/v1/menu')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.a('object');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"],"file":"Test.js"}